name: Tweets Random Cases
on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '5 20 * * 1'

jobs:
  tweets-random-cases-from-patolojiatlasi:
    runs-on: ubuntu-latest
    steps:
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv
    steps:
      - name: "actions checkout"
        uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2

      - name: Install R dependencies
        run: |
            if (!requireNamespace("jsonlite", quietly = TRUE)) {install.packages("jsonlite")}
            if (!requireNamespace("magrittr", quietly = TRUE)) {install.packages("magrittr")}
            if (!requireNamespace("dplyr", quietly = TRUE)) {install.packages("dplyr")}
        shell: Rscript {0}


      # - name: "Get tweet content"
      #   shell: Rscript {0}
      #   run: |
      #       searchcontent <- jsonlite::fromJSON(txt = "./docs/search.json", simplifyDataFrame = TRUE) %>% as.data.frame()
      #       searchcontent <- searchcontent %>% dplyr::filter(!is.na(section))
      #       searchcontent <- searchcontent %>% dplyr::filter(!(section ==""))
      #       searchcontent <- searchcontent %>% dplyr::filter(!title %in% c("Yazarlar ve Katkıda Bulunanlar","Appendix A — Yönetim ve Geliştirme"))
      #       searchcontent <- sample_n(searchcontent, 1)
      #
      #       tweetstring <- glue::glue("{searchcontent$title} bölümünden bir vaka: {searchcontent$section}")
      #
      #       cat(tweetstring)


      - name: "Tweet"
        id: tweet
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

        run: |
            v1=echo $(Rscript -e "source('./R/tweet-random-cases.R')")
            echo "::set-output name=tweetstring::$(v1)"

      - uses: ethomson/send-tweet-action@v1
        with:
          status: '#Patoloji atlası güncellendi ${{ steps.tweet.outputs.tweetstring }}. #dijitalpatoloji #WSI #preparat https://www.patolojiatlasi.com/'
          consumer-key: ${{ secrets.API_KEY }}
          consumer-secret: ${{ secrets.API_SECRET_KEY }}
          access-token: ${{ secrets.ACCESS_TOKEN }}
          access-token-secret: ${{ secrets.ACCESS_TOKEN_SECRET }}
