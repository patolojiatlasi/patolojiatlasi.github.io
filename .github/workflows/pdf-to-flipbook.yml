name: Convert PDF to HTML5 Flipbook

on:
  workflow_dispatch:  # Allow manual trigger
  # schedule:
  #   - cron: '0 0 * * *'  # Run daily at midnight UTC

jobs:
  convert-to-flipbook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Create flipbookpdf folder
        run: mkdir -p flipbookpdf

      - name: Download PDF
        run: |
          curl -L -o flipbookpdf/Patoloji-Atlasi.pdf https://github.com/patolojiatlasi/patolojiatlasi.github.io/releases/latest/download/Patoloji-Atlasi.pdf

      - name: Download and extract pdf.js
        run: |
          cd flipbookpdf
          rm -rf pdfjs  # Remove existing pdfjs directory if it exists
          curl -L -o pdfjs.zip https://github.com/mozilla/pdf.js/releases/download/v2.9.359/pdfjs-2.9.359-dist.zip
          unzip -o pdfjs.zip -d pdfjs  # -o flag to overwrite files without prompting
          rm pdfjs.zip

      - name: Install turn.js
        run: |
          cd flipbookpdf
          curl -O https://raw.githubusercontent.com/blasten/turn.js/master/turn.min.js


      - name: Create flipbook HTML
        run: |
          cd flipbookpdf
          cat > "flipbook.html" <<EOL
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Patoloji Atlasi Flipbook</title>
              <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
              <script src="turn.min.js"></script>
              <script src="pdfjs/build/pdf.js"></script>
              <style>
                  body, html { 
                      margin: 0; 
                      padding: 0; 
                      overflow: hidden; 
                      height: 100vh;
                      display: flex;
                      flex-direction: column;
                      justify-content: center;
                      align-items: center;
                  }
                  #flipbook { 
                      width: 90vw; 
                      height: 80vh; 
                  }
                  #flipbook .page { 
                      background-color: white;
                  }
                  .page canvas { 
                      width: 100%; 
                      height: 100%; 
                  }
                  #debug {
                      margin-top: 20px;
                      width: 90vw;
                      height: 10vh;
                      overflow: auto;
                      border: 1px solid #ccc;
                      padding: 10px;
                  }
              </style>
          </head>
          <body>
              <div id="flipbook"></div>
              <div id="debug"></div>
              <script>
                  function log(message) {
                      console.log(message);
                      document.getElementById('debug').innerHTML += message + '<br>';
                  }

                  log('Script started');

                  // Ensure PDF.js worker is available
                  pdfjsLib.GlobalWorkerOptions.workerSrc = 'pdfjs/build/pdf.worker.js';

                  log('PDF.js worker source set');

                  // Load the PDF document
                  log('Attempting to load PDF');
                  pdfjsLib.getDocument('Patoloji-Atlasi.pdf').promise.then(function(pdf) {
                      log('PDF loaded successfully. Number of pages: ' + pdf.numPages);
                      var numPages = pdf.numPages;
                      var flipbook = document.getElementById('flipbook');

                      // Create promises for each page
                      var pagePromises = [];
                      for (var i = 1; i <= numPages; i++) {
                          pagePromises.push(pdf.getPage(i));
                      }

                      log('Created promises for all pages');

                      // Render all pages
                      Promise.all(pagePromises).then(function(pages) {
                          log('All pages retrieved successfully');
                          pages.forEach(function(page, index) {
                              log('Rendering page ' + (index + 1));
                              var scale = 1.5;
                              var viewport = page.getViewport({scale: scale});

                              var pageDiv = document.createElement('div');
                              pageDiv.className = 'page';
                              flipbook.appendChild(pageDiv);

                              var canvas = document.createElement('canvas');
                              var context = canvas.getContext('2d');
                              canvas.height = viewport.height;
                              canvas.width = viewport.width;

                              var renderContext = {
                                  canvasContext: context,
                                  viewport: viewport
                              };

                              page.render(renderContext);
                              pageDiv.appendChild(canvas);
                          });

                          log('All pages rendered');

                          // Initialize turn.js after all pages are rendered
                          $(document).ready(function() {
                              log('Initializing turn.js');
                              $("#flipbook").turn({
                                  width: $("#flipbook").width(),
                                  height: $("#flipbook").height(),
                                  autoCenter: true,
                                  when: {
                                      turning: function(event, page, view) {
                                          if (page == 1) {
                                              event.preventDefault();
                                          }
                                      }
                                  }
                              });
                              log('turn.js initialized');
                          });
                      }).catch(function(error) {
                          log('Error rendering pages: ' + error);
                      });
                  }).catch(function(error) {
                      log('Error loading PDF: ' + error);
                  });

                  // Resize handler
                  $(window).resize(function() {
                      $("#flipbook").turn("size", $("#flipbook").width(), $("#flipbook").height());
                  });

                  log('Script ended');
              </script>
          </body>
          </html>
          EOL





      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add flipbookpdf
          git commit -m "Update flipbook PDF" || echo "No changes to commit"
          git push