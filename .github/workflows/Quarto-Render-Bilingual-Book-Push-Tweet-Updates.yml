name: Quarto Render Bilingual Book Push Tweet Updates

on:
  workflow_dispatch:
  push:


jobs:
  quarto-render-and-deploy:
    if: "!contains(github.event.head_commit.message, 'WIP')"
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv
    steps:
      - uses: actions/checkout@v2

      # - uses: actions/setup-python@v2
      #
      # - name: "Install Python deps"
      #   run: |
      #     pip install -r requirements.txt

      # - uses: r-lib/actions/setup-r@v1
      #
      # - name: "Install curl for Bioconductor"
      #   run: |
      #     sudo apt -y install libcurl4-openssl-dev

      - name: "Install R Packages: Cache packages"
        uses: actions/cache@v1
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      - name: "Install R Packages: Restore packages"
        shell: Rscript {0}
        run: |
          if (!requireNamespace("quarto", quietly = TRUE)) {install.packages("quarto")}
          if (!requireNamespace("fs", quietly = TRUE)) {install.packages("fs")}
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()

      - name: "Install Quarto"
        # uses: pommevilla/quarto-render@main
        uses: quarto-dev/quarto-actions/install-quarto@v1

      - name: "Render Book From EN"
        shell: Rscript {0}
        run: |
          # Prepare EN
          fs::file_copy(path = "./_quarto_EN.yml", new_path = "./_quarto.yml", overwrite = TRUE)
          fs::file_copy(path = "./R/languageEN.R", new_path = "./R/language.R",overwrite = TRUE)
          # render EN
          # quarto::quarto_render(".", as_job = FALSE)

      - name: "render EN"
        run: |
          quarto render

      - name: "Render Book From TR"
        shell: Rscript {0}
        run: |
          if (file.exists("./EN/CNAME")){fs::file_delete(path = "./EN/CNAME")}
          # prepare TR
          fs::file_copy(path = "./_quarto_TR.yml", new_path = "./_quarto.yml", overwrite = TRUE)
          fs::file_copy(path = "./R/languageTR.R", new_path = "./R/language.R", overwrite = TRUE)
          # render TR
          # quarto::quarto_render(".", as_job = FALSE)
          # fs::dir_copy(path = "./EN", new_path = "./docs/EN", overwrite = TRUE)
          fs::dir_copy(path = "./docs", new_path = "./public", overwrite = TRUE)

      - name: "render TR"
        run: |
          quarto render

#       - name: "Deploy to gh-pages"
#         uses: peaceiris/actions-gh-pages@v3
#         if: github.ref == 'refs/heads/main'
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./docs


      - name: Commit results to main branch
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "CI added changes `date +'%Y-%m-%d %H:%M:%S'`" || echo "No changes to commit"
          git push origin || echo "No changes to commit"
      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # WORKFLOW_GITHUB_TOKEN
          force: true

      - name: Pushes to patolojiatlasi EN
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: 'EN'
          destination-github-username: 'patolojiatlasi'
          destination-repository-name: 'EN'
          user-email: drserdarbalci@gmail.com
          target-branch: main

      # - name: Pushes to pathologyatlas EN2
      #   uses: cpina/github-action-push-to-another-repository@main
      #   env:
      #     API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      #   with:
      #     source-directory: 'EN'
      #     destination-github-username: 'pathologyatlas'
      #     destination-repository-name: 'EN2'
      #     user-email: drserdarbalci@gmail.com
      #     target-branch: main


  send-tweet:
    if: "!contains(github.event.head_commit.message, 'WIP') && !contains(github.event.head_commit.message, 'merge')   && !contains(github.event.head_commit.message, 'notweet')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Tweet"
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - uses: ethomson/send-tweet-action@v1
        with:
          status: '#Patoloji atlası güncellendi ${{ steps.date.outputs.date }} ${{github.event.head_commit.message}}. #dijitalpatoloji #WSI #preparat https://www.patolojiatlasi.com/'
          consumer-key: ${{ secrets.API_KEY }}
          consumer-secret: ${{ secrets.API_SECRET_KEY }}
          access-token: ${{ secrets.ACCESS_TOKEN }}
          access-token-secret: ${{ secrets.ACCESS_TOKEN_SECRET }}


  send-tweet-EN:
    if: "!contains(github.event.head_commit.message, 'WIP') && !contains(github.event.head_commit.message, 'merge')  && !contains(github.event.head_commit.message, 'notweet')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Tweet-EN"
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - uses: ethomson/send-tweet-action@v1
        with:
          status: '#Pathology #atlas is updated ${{ steps.date.outputs.date }} ${{github.event.head_commit.message}}. #digitalpathology #WSI #slides https://www.patolojiatlasi.com/EN/'
          consumer-key: ${{ secrets.API_KEY }}
          consumer-secret: ${{ secrets.API_SECRET_KEY }}
          access-token: ${{ secrets.ACCESS_TOKEN }}
          access-token-secret: ${{ secrets.ACCESS_TOKEN_SECRET }}



  build-to-gitlab:
    needs: quarto-render-and-deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Mirror + trigger CI
      uses: SvanBoxel/gitlab-mirror-and-ci-action@master
      with:
        args: "https://gitlab.com/patolojiatlasi/tr"
      env:
        GITLAB_HOSTNAME: "gitlab.com"
        GITLAB_USERNAME: "patolojiatlasi"
        GITLAB_PASSWORD: ${{ secrets.GITLAB_PASSWORD }} # // Generate here: https://gitlab.com/profile/personal_access_tokens
        GITLAB_PROJECT_ID: "36540563" # // https://gitlab.com/<namespace>/<repository>/edit
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # // https://docs.github.com/en/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
