# name: Tweets Random Cases
# on:
#   workflow_dispatch:
# #  push:
#   # schedule:
#   #   - cron: '5 20 * * 1'
#
# jobs:
#   tweets-random-cases-from-patolojiatlasi:
#     if: "!contains(github.event.head_commit.message, 'WIP')"
#     runs-on: ubuntu-latest
#     env:
#       RENV_PATHS_ROOT: ~/.local/share/renv
#       GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
#
#     steps:
#     - name: "actions checkout"
#       uses: actions/checkout@v2
#
#     - uses: r-lib/actions/setup-r@v2
#
#     - uses: r-lib/actions/setup-renv@v2
#
#     - name: Restore R package cache
#       uses: actions/cache@v2
#       with:
#         path: ${{ env.R_LIBS_USER }}
#         key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
#         restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-
#
#     - name: Install R dependencies
#       run: |
#         if (!requireNamespace("remotes", quietly = TRUE)) {install.packages("remotes", , dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
#         remotes::install_deps(dependencies = TRUE)
#         if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv", dependencies = TRUE, quiet = TRUE, verbose = FALSE)
#         renv::restore()
#         if (!requireNamespace("jsonlite", quietly = TRUE)) {install.packages("jsonlite", dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
#         if (!requireNamespace("magrittr", quietly = TRUE)) {install.packages("magrittr", dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
#         if (!requireNamespace("dplyr", quietly = TRUE)) {install.packages("dplyr", dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
#         saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
#         writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
#       shell: Rscript {0}
#
#     - name: write tweetstring
#       run: |
#         source('./R/tweet-random-cases.R')
#       shell: Rscript {0}
#
#
#     - name: Set tweetstring
#       run: |
#         echo "tweetstring=$(cat tweetstring.txt)" >>$GITHUB_ENV
#         # echo '::set-output name=TWEET_STRING::$(cat tweetstring.txt)'
#       id: random-tweet-generator
#     - uses: ethomson/send-tweet-action@v1
#       with:
#        status: '${{ env.tweetstring }}'
#        consumer-key: ${{ secrets.API_KEY }}
#        consumer-secret: ${{ secrets.API_SECRET_KEY }}
#        access-token: ${{ secrets.ACCESS_TOKEN }}
#        access-token-secret: ${{ secrets.ACCESS_TOKEN_SECRET }}
#
